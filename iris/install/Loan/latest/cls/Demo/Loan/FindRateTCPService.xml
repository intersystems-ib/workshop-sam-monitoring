<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Demo.Loan.FindRateTCPService">
<Description>
To use this service, telnet to the configured port (default=1234) and enter the application date on a single line, separated by colons.
Example: 10000:Mo:111-22-3333:US
The demo application will copy your receipt notice to the output terminal, and will send the final Approval response there as well.</Description>
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.BusinessService</Super>
<TimeCreated>59276,57717.364</TimeCreated>

<Parameter name="ADAPTER">
<Description>
Name of the adapter class</Description>
<Default>EnsLib.TCP.TextLineInboundAdapter</Default>
</Parameter>

<Method name="OnProcessInput">
<FormalSpec>pInput:Ens.StringContainer,pOutput:Ens.StringContainer</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; assuming the first line is 'amount:name:TaxID:nationality'
	
	#; Just print a prompt if empty input
	If pInput.StringValue="" {
		Set pOutput=##class(Ens.StringContainer).%New("Please apply for a loan as follows - ""Amount:Name:TaxID:Nationality"" (or ""quit"" to quit)")
		Quit $$$OK
	} ElseIf $ZCVT(pInput.StringValue,"L")="quit" {
		$$$sysTRACE("Disconnecting because of client request '"_$E(pInput.StringValue,1,32767-50)_"'")
		Do ..Adapter.Disconnect()
		Quit $$$OK
	}
	$$$TRACE("received line "_pInput.StringValue)

	Set tApplication = ##class(Demo.Loan.Msg.Application).%New()
	Set tSubject=pInput.StringValue
	Set tApplication.Amount=$p(tSubject,":",1)
	Set tApplication.Name=$p(tSubject,":",2)
	Set tApplication.TaxID=$p(tSubject,":",3)
	Set tApplication.Nationality=$p(tSubject,":",4)
	Set tApplication.BusinessOperationType="tcp"
	Set tApplication.Destination=""
	Set tSC=..SendRequestAsync("Demo.Loan.FindRateDecisionProcessBPL",tApplication)  Quit:$$$ISERR(tSC) tSC

	$$$TRACE("record number is "_tApplication.RecordNumber())
	Set pOutput=##class(Ens.StringContainer).%New(tApplication.GetRecordNumberText())

	Set tSendReply = ##class(Demo.Loan.Msg.SendReply).%New()
	Set tSendReply.Text=tApplication.GetRecordNumberText()
	Set tSendReply.Destination=""
	Set tSC=..SendRequestAsync("Demo.Loan.FindRateTCPOperation",tSendReply)
	Quit tSC
]]></Implementation>
</Method>
</Class>
</Export>
